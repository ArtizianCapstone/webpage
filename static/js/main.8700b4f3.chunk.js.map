{"version":3,"sources":["logo.svg","Aboutuspage.js","Termspage.js","AmazonLinkerpage.js","Privacypage.js","Landingpage.js","Page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AboutUsPage","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","Container","Row","Component","TermsPage","_this","page","AmazonLinkerPage","PrivacyPage","LandingPage","Page","pagetype","title","Aboutuspage","Termspage","AmazonLinkerpage","Privacypage","Landingpage","TABS","App","state","activePlace","_this2","Nav","variant","defaultActiveKey","onSelect","index","setState","map","Item","Link","key","eventKey","src_Page","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8700b4f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootswatch/spacelab/bootstrap.css\";\nimport { Navbar, NavItem, Nav, Container, Row, Col } from \"react-bootstrap\";\n\nclass AboutUsPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"TermsPage\">\n        <Container>\n          <Row>\n            <div className=\"Title\">\n              <h1>About Us</h1>\n            </div>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default AboutUsPage;","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootswatch/spacelab/bootstrap.css\";\nimport { Navbar, NavItem, Nav, Container, Row, Col } from \"react-bootstrap\";\n\nclass TermsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      page: props.page,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"TermsPage\">\n        <Container>\n          <Row>\n            <div className=\"Title\">\n              <h1>Terms</h1>\n            </div>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default TermsPage;","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootswatch/spacelab/bootstrap.css\";\nimport { Navbar, NavItem, Nav, Container, Row, Col } from \"react-bootstrap\";\nclass AmazonLinkerPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"TermsPage\">\n        <Container>\n          <Row>\n            <div className=\"Title\">\n              <h1>Amazon Handmade</h1>\n            </div>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default AmazonLinkerPage;","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootswatch/spacelab/bootstrap.css\";\nimport { Navbar, NavItem, Nav, Container, Row, Col } from \"react-bootstrap\";\nclass PrivacyPage extends Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      page: props.page,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"TermsPage\">\n        <Container>\n          <Row>\n            <div className=\"Title\">\n              <h1>Privacy Policy</h1>\n            </div>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default PrivacyPage;","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootswatch/spacelab/bootstrap.css\";\nimport { Navbar, NavItem, Nav, Container, Row, Col } from \"react-bootstrap\";\n\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      page: props.page,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"TermsPage\">\n        <Container>\n          <Row>\n            <div className=\"Title\">\n              <h1>Homepage</h1>\n            </div>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;","import AboutUsPage from './Aboutuspage';\nimport TermsPage from './Termspage';\nimport AmazonLinkerPage from './AmazonLinkerpage';\nimport PrivacyPage from './Privacypage';\nimport LandingPage from './Landingpage';\nimport React, { Component } from 'react';\nimport { Navbar, NavItem, Nav, Container, Row, Col } from \"react-bootstrap\";\n\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      page: props.page,\n    };\n  }\n\n  render() {\n    let pagetype;\n    if (this.props.page.title === \"About Us\"){\n      pagetype = <AboutUsPage/>;}\n    if (this.props.page.title === \"Terms\"){\n      pagetype = <TermsPage/>;}\n    if (this.props.page.title === \"Amazon\"){\n      pagetype = <AmazonLinkerPage/>;}\n    if (this.props.page.title === \"Privacy Policy\"){\n      pagetype = <PrivacyPage/>;}\n    if (this.props.page.title === \"Artizain - Handmade\"){\n      pagetype = <LandingPage/>;}\n    return (\n      <div className=\"TermsPage\">\n        <Container>\n          <Row>\n            <div className=\"Pageloaded\">\n              {pagetype}\n            </div>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Page;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Page from './Page'\nimport './App.css';\nimport { Navbar, NavItem, Nav, Container, Row, Col } from \"react-bootstrap\";\n\n\nvar Terms = {\n  title: \"Terms\",\n};\nvar AboutUS = {\n  title: \"About Us\",\n};\nvar Privacy = {\n  title: \"Privacy Policy\",\n};\nvar Landing = {\n  title: \"Artizain - Handmade\",\n};\nvar Handmade = {\n  title: \"Amazon\",\n};\nconst TABS = [Landing, AboutUS,Terms, Privacy, Handmade];\n\nclass App extends Component {\n  constructor()\n  {\n    super();\n    this.state = {\n      activePlace: 0,\n    };\n  }\n  render() {\n    const activePlace = this.state.activePlace;\n    return (\n      <div className=\"App\">\n        <Nav\n          variant=\"tabs\"\n          defaultActiveKey={activePlace}\n          onSelect={index => {\n            this.setState({ activePlace: index });\n          }}\n        >\n          {TABS.map((page, index) => (\n            <Nav.Item>\n              <Nav.Link key={index} eventKey={index}>{page.title}</Nav.Link>\n            </Nav.Item>\n          ))}\n        </Nav>\n        <Page page={TABS[activePlace]}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}